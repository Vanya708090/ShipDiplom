@model ShipDiplom.Models.Entities.Ship

@{
    var successMessage = TempData["SuccessMessage"] as string;
    var errorMessage = TempData["ErrorMessage"] as string;
}

@if (!string.IsNullOrEmpty(successMessage))
{
    <div class="alert alert-success">@successMessage</div>
}
else if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-group">
        <label for="shipType">Тип корабля:</label>
        @Html.EditorFor(model => model.ShipType, new { htmlAttributes = new { @class = "form-control" } })
    </div>
    <div class="form-group">
        <label for="systemId">ID системы:</label>
        @Html.EditorFor(model => model.SystemId, new { htmlAttributes = new { @class = "form-control" } })
    </div>
    <div class="form-group">
        <label for="length">Длина:</label>
        @Html.EditorFor(model => model.Length, new { htmlAttributes = new { @class = "form-control" } })
    </div>
    <div class="form-group">
        <label for="width">Ширина:</label>
        @Html.EditorFor(model => model.Width, new { htmlAttributes = new { @class = "form-control" } })
    </div>
    <div class="form-group">
        <label for="ownerId">ID владельца:</label>
        @Html.EditorFor(model => model.OwnerId, new { htmlAttributes = new { @class = "form-control" } })
    </div>
    <button type="submit" class="btn btn-primary">Создать</button>

    @if (ViewContext.HttpContext.Request.Method == "POST" && (!string.IsNullOrEmpty(successMessage) || !string.IsNullOrEmpty(errorMessage)))
    {
        <div class="alert @(string.IsNullOrEmpty(successMessage) ? "alert-danger" : "alert-success")">
            @(string.IsNullOrEmpty(successMessage) ? errorMessage : successMessage)
        </div>
    }
}
