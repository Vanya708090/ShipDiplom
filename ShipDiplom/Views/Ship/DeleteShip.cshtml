@using ShipDiplom.Models.Entities;

@model Ship

@section Scripts {
    <script>
        function deleteShipConfirmed() {
            fetch('@Url.Action("DeleteShipConfirmed", "Ship", new { shipId = @Model.Id })', {
                method: 'DELETE'
            }).then(response => {
                if (response.ok) {
                    location.href = '@Url.Action("GetAllShips", "Ship")';
                } else if (response.status === 404) {
                    console.error('Корабль не найден');
                } else {
                    console.error('Произошла ошибка при удалении корабля:', response.statusText);
                }
            }).catch(error => console.error('Произошла ошибка:', error));
        }

    </script>
}


<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2>Удалить корабль</h2>
            <p>Вы действительно хотите удалить этот корабль?</p>
            <p><strong>Название:</strong> @Model.Name</p>
            <p><strong>ID системы:</strong> @Model.SystemId</p>
            <p><strong>Длина:</strong> @Model.Length</p>
            <p><strong>Ширина:</strong> @Model.Width</p>
            <p><strong>ID владельца:</strong> @Model.OwnerId</p>
            <button type="button" class="btn btn-danger" onclick="deleteShipConfirmed()">Удалить</button>
            <a href="@Url.Action("GetAllShips", "Ship")" class="btn btn-primary">Назад к списку</a>
        </div>
    </div>
</div>